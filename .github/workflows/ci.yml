name: CI/CD Pipeline

env:
  DOCKER_IMAGE: petclinic
  TAG: 1.0.0

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  compile-test-build-docker:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'

    # Make sure all dependencies are resolved
    - name: Install Maven dependencies
      run: mvn dependency:resolve || exit 1

    - name: Compile the code
      run: mvn -B package

    - name: Run Tests
      run: mvn -B test

    - name: Login to Docker registry
      run: echo "${{secrets.JFROG_ACCESS_TOKEN}}" | docker login ${{secrets.DOCKER_REGISTRY_URL}} -u ${{ secrets.JF_USER }} --password-stdin || exit 1

    - name: Build Docker Image
      run: docker build -t ${{secrets.DOCKER_REGISTRY_URL}}/$DOCKER_IMAGE:$TAG -f .github/Dockerfile . || exit 1
        
    - name: Push Docker Image to Artifactory
      run: docker push ${{secrets.DOCKER_REGISTRY_URL}}/$DOCKER_IMAGE:$TAG

    - name: Save artifacts
      uses: actions/upload-artifact@v4
      with:
        name: spring-petclinic-artifacts
        path: target/
      continue-on-error: true

    - name: Save test reports on Github
      uses: actions/upload-artifact@v4
      with:
        name: test-reports
        path: target/surefire-reports
      continue-on-error: true  

    - name: Upload Maven Artifacts to Artifactory
      run: |
        curl -u ${{ secrets.JF_USER }}:${{ secrets.JFROG_ACCESS_TOKEN }} -T target/*.jar "https://luckyj5.jfrog.io/artifactory/spring-petclinic-docker/"
    
    - name: Cleanup
      run: |
        docker logout ${{secrets.DOCKER_REGISTRY_URL}}
